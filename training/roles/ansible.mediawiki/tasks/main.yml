---
# tasks file for ansible.mediawiki
- name: "install software-properties-common"
  apt:
    name: "software-properties-common"
    state: latest
    update_cache: yes

- name: "add repository"
  apt_repository:
    repo: 'ppa:ondrej/php'
    codename: bionic

- name: "install php"
  apt:
    name:  "{{item}}"
    state: latest
    update_cache: yes
  with_items:
    - php7.1 
    - libapache2-mod-php7.1 
    - php7.1-common 
    - php7.1-mbstring 
    - php7.1-xmlrpc 
    - php7.1-soap 
    - php7.1-gd 
    - php7.1-xml 
    - php7.1-intl 
    - php7.1-mysql 
    - php7.1-cli 
    - php7.1-mcrypt 
    - php7.1-zip
    - php7.1-curl




- name: "mediawiki directory"
  file:
    path: "{{mediawiki_directory}}"
    owner: "www-data"
    group: "www-data"
    state: directory

- name: "uncompress mediawiki archive"
  unarchive:
    src: "{{mediawiki_archive_url}}"
    dest: "{{mediawiki_directory}}"
    owner: "www-data"
    group: "www-data"
    remote_src: yes
    # remove mediawiki-1.29.0/ from path
    extra_opts: --transform=s/^mediawiki-[0-9\.]*\///
  # vars to known if current machine have mediawiki files
  # check presence in next task
  register: archive_uncompressed

- name: "mediawiki configuration"
  become: yes
  become_user: "www-data"
  command:
    php install.php
       --dbname mediawiki --lang fr
       --dbuser {{mediawiki_db_user}}
       --dbpass {{mediawiki_db_password}}
       --pass {{mediawiki_admin_password}}
       --dbserver {{mediawiki_db_host}}
       --server {{ mediawiki_server }}
       
       {{mediawiki_title}} {{mediawiki_admin_user}}
  args:
    # If LocalSettings exists, we skip this command
    creates: "{{mediawiki_directory}}/LocalSettings.php"
    chdir: "{{mediawiki_maintenance_directory}}"
  # All commands are launched from the first machine
  # Using delegate_to and with_items we can launch the command
  # one machine at a time
  # This way, we are sure that our command is never launched
  # multiple time in parallel from different hosts
  run_once: yes
  delegate_to: "{{item}}"
  # Check if we have mediawiki files on current host
  when: "hostvars[item].archive_uncompressed is defined"
  with_items: "{{groups.web}}"

- name: "remove default wiki webpath"
  become_user: "www-data"
  lineinfile:
    path: "{{mediawiki_directory}}/LocalSettings.php"
    regexp: '^\$wgScriptPath = "\/wiki";'
    line: '$wgScriptPath = "";'
    backrefs: yes

- name: "mediawiki db update"
  become: yes
  become_user: "www-data"
  command:
    php update.php --quick
  args:
    chdir: "{{mediawiki_maintenance_directory}}"
  # Update need to be launched only once
  run_once: yes
  register: _
  changed_when: "' ...done.' in _.stdout"

